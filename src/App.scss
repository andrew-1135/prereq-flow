.App {
  flex-grow: 1;
  position: relative;
  overflow: hidden;
}

%gray-border {
  border: 2px solid gray;
  border-radius: 3px;
}

%lightgray-border {
  border: 2px solid lightgray;
  border-radius: 3px;
}

%base-button-style {
  appearance: none;
  @extend %gray-border;
  // background-color: rgb(240, 240, 240);
  padding: 0.25rem;

  &:not(:disabled):hover {
    color: white;
    background-color: gray;
  }
}

$flow-colors: (
  "completed": black,
  "enrolled": darkviolet,
  "ready": limegreen,
  "under-one-away": goldenrod,
  "one-away": darkorange,
  "over-one-away": red,
);

.header {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;

  display: flex;
  flex-direction: column;

  @extend %lightgray-border;
  border-top: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  padding: 0.5rem;
  background: rgba(white, 0.95);

  h1 {
    text-align: center;
  }

  &__buttons {
    display: flex;
    margin-top: 0.25rem;
  }

  &__version {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
  }

  button {
    @extend %base-button-style;
    margin: 0 0.25rem;
    &:first-child {
      margin-left: 0;
    }
    &:last-child {
      margin-right: 0;
    }
  }
}

.legend {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;

  display: flex;

  @extend %lightgray-border;
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  padding: 0.25rem;
  background: rgba(white, 0.95);

  div {
    display: flex;
    margin: 0.25rem;
    border: 3px solid;
    border-radius: 5px;
    padding: 0.25rem;

    line-height: 1rem;
    white-space: nowrap;

  }

  @each $status, $color in $flow-colors {
    .#{$status} {
      border-color: $color;
    }
  }
}

.display-controls,
.close-controls {
  position: absolute;
  bottom: 0.5rem;
  right: 0.5rem;
  z-index: 10;

  height: 2rem;
  width: 2rem;

  @extend %base-button-style;
  font-size: 1rem;
  font-weight: bold;

  background-color: rgb(240, 240, 240);
  display: flex;
  justify-content: center;
  align-items: center;
  img {
    height: 75%;
    width: 75%;
  }
  &:hover img {
    filter: invert(100%);
  }
}

.controls-help {
  position: absolute;
  bottom: 0;
  right: 0;
  max-width: 20rem;
  z-index: 11;

  @extend %lightgray-border;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: none;
  border-bottom: none;
  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 2rem;
  padding-right: 3rem;
  background-color: white;
  font-size: 0.9rem;

  li {
    margin: 0.25rem 0;
  }

  @media (prefers-reduced-motion: no-preference) {
    transition: transform 150ms ease-out;
  }
  &.closed {
    transform: translateX(100%);
  }
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  color: #333;
  display: inline-block;
  font-size: .85em;
  font-weight: 700;
  line-height: 0.85;
  padding: 2px 4px;
  white-space: nowrap;
  font-family: consolas;
}

.tippy-box {
  background: rgba(#333, 0.96);
  p {
    margin: 0.5rem 0;
  }
  mark {
    color: #333;
    background: rgba(white, 0.96);
    padding: 0 0.1rem;
  }

  &--error {
    background: darkred;
  }
}

.react-flow__node.selected .CustomNode {
  @each $status, $color in $flow-colors {

  &.#{$status} {
      color: white;
      background-color: $color;
    }
  }
}

.CustomNode {
  border-width: 3px;
  border-radius: 10px;
  text-transform: uppercase;
  font-family: sans-serif;
  font-size: 1.1rem;
  font-weight: bold;

  @each $status, $color in $flow-colors {
    &.#{$status} {
      border-color: $color;
      background-color: hsl(hue($color), saturation($color), 95%);

      &.connected {
        background-color: hsl(hue($color), saturation($color), 80%);
      }

      &:hover {
        color: white;
        background-color: $color;
      }
    }
  }
}

.react-flow__edge {
  &-path {
    stroke-width: 2px;
  }
  &-text {
    font-family: sans-serif;
    fill: white;
    font-size: 0.8rem;
  }
  &-textbg {
    fill: black;
  }

  @each $status, $color in $flow-colors {
    &.#{$status} .react-flow__edge-path {
      stroke: $color;
    }
    &.animated.#{$status} .react-flow__edge-textbg {
      fill: $color;
    }
  }

  &.selected .react-flow__edge-path {
    stroke-width: 4px;
  }
}

.react-flow__controls {
  &-button {
    cursor: auto;
  }
}

.ContextMenu {
  position: fixed;
  z-index: 12;
  display: flex;
  flex-direction: column;
  list-style: none;

  background-color: hsl(0, 0%, 95%);
  @extend %gray-border;

  cursor: default;

  p {
    margin: 0.25rem 0.5rem;
    padding-left: 1rem;
  }

  hr {
    margin: 0.2rem 0.5rem;
  }

  li.current p {
    padding-left: 0;
    &::before {
      content: "âœ“";
      display: inline-block;
      width: 1rem;
    }
  }

  li:hover {
    color: white;
    background-color: gray;
  }
}

/* %%%%%%% */
/* DIALOGS */
/* %%%%%%% */
.ModalDialog {
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  z-index: 15;

  display: flex;
  align-items: center;
  justify-content: center;

  @media (prefers-reduced-motion: no-preference) {
    transition: opacity 100ms;
  }
  background: rgba(black, 0.5);
}
.close-button {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  width: 1.6rem;
  height: 1.6rem;

  appearance: none;
  border: none;
  background: url("dist/icons/x-black.svg") no-repeat center center;
  &:not(:disabled):hover,
  &:active {
    background: url("dist/icons/x-red.svg") no-repeat center center;
  }
}

%base-text-input-style {
  height: 1.5rem;
  padding: 0.75rem 0.25rem;
  @extend %gray-border;
}

.NewFlowDialog,
.OpenFileDialog,
.AddCourseDialog,
.AboutDialog {
  position: relative;
  max-height: #{'calc(100% - 1rem)'};

  margin: 0.5rem;
  @extend %lightgray-border;
  padding: 1rem;
  background: white;

  p:not(:first-of-type) {
    margin: 1rem 0;
  }
}
.OpenFileDialog {
  width: #{'min(17.5rem, 100% - 1rem)'};
  min-height: 10rem;

  h2 {
    margin-bottom: 0.5rem;
  }

  &__open-button {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    @extend %base-button-style;
    font-size: 1rem;
  }
}
.NewFlowDialog {
  width: #{'min(30rem, 100% - 1rem)'};
  overflow: hidden;

  padding: 1rem 0;
  padding-bottom: 0;

  h2 {
    margin: 0.5rem 1rem;
    margin-top: 0;
  }

  h3 {
    margin: 0.5rem 0;
  }

  hr {
    margin: 0 1rem;
  }

  &__slides {
    @media (prefers-reduced-motion: no-preference) {
      transition: transform 250ms;
    }

    // No transform for slide-0
    &.slide-1 {
      transform: translateX(-(100%/3)*1);
    }
    &.slide-2 {
      transform: translateX(-(100%/3)*2);
    }
  }
}
.NewFlowDialog__slides {
  width: 300%;

  display: flex;
  max-height: 20rem;
}
.PreWarning,
.DegreeSelect,
.CourseSelect {
  width: calc(100%/3);
  padding: 0 1rem;
}
.PreWarning {
  & > section {
    position: relative;
  }
  overflow-y: scroll;

  li {
    margin-left: 1rem;
  }

  p:last-of-type {
    padding-bottom: 2.5rem;
  }

  &__accept-button {
    position: absolute;
    bottom: 0;
    right: 0;
    @extend %base-button-style;
    font-size: 1rem;
  }
}
.DegreeSelect {
  position: relative;

  .majors,
  .minors {
    margin-bottom: 1rem;

    &__selected-list {
      max-width: 20rem;
      height: 6rem;
      margin: 0.5rem 0;
    }
    &__selected-item {
      display: flex;
      justify-content: space-between;
      margin: 0.5rem 0;
      padding-left: 0.5rem;
      font-size: 0.9rem;
      line-height: 1.5rem;

      background-color: hsl(0, 0%, 97%);
    }

    &__add-button,
    &__delete-button {
      appearance: none;
      @extend %base-button-style;
      margin-left : 0.25rem;
      height: 1.5rem;
      width: 1.5rem;
      padding: 0;

      display: flex;
      justify-content: center;
      align-items: center;
      &:hover img {
        filter: invert(100%);
      }
    }

    &__add-button img {
      height: 70%;
      width: 70%;
    }

    &__delete-button img {
      height: 75%;
      width: 75%;
    }

    &__bar-and-button {
      max-width: 20rem;
      display: flex;
      justify-content: space-between;
    }
    &__select-input {
      flex-grow: 1;
      height: 1.5rem;
    }
  }

  &__get-courses-button {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    @extend %base-button-style;
    font-size: 1rem;
  }
}

.AddCourseDialog {
  width: #{'min(30rem, 100% - 1rem)'};
  min-height: 20rem;
  display: flex;
  flex-direction: column;

  .course-type-select {
    padding: 0.5rem 0;
    border: none;

    &__uw-label {
      margin-right: 1rem;
    }

    &__uw-radio,
    &__custom-radio {
      margin-right: 0.25rem;
    }
  }

  input,
  textarea {
    font-family: sans-serif;
  }

  input[type=text],
  input[type=search] {
    @extend %base-text-input-style
  }

  .add-uw-course {
    &__bar-and-button {
      display: flex;
      margin-bottom: 1rem;
    }
    [data-reach-combobox] {
      max-width: 30rem;
      flex-grow: 1;
      margin-right: 0.25rem;

      display: flex;
      input {
        @extend %base-text-input-style;
        flex: 1;
      }
    }
    &__add-button {
      @extend %base-button-style;
      height: 1.75rem;
      width: 2.5rem;
      padding: 0 0.25rem;
    }
  }

  .add-custom-course {
    flex-grow: 1;
    display: flex;
    flex-direction: column;

    &__header-row {
      display: flex;
      justify-content: start;
      align-items: flex-start;
    }
    &__footer-row {
      display: flex;
      margin-bottom: 1.5rem;
    }


    &__id-input {
      width: 8rem;
    }
    &__name-input {
      margin: 0 0.5rem;
      flex-grow: 1;
    }
    &__credits-input {
      width: 3.5rem;
    }
    &__description-input {
      margin: 0.5rem 0;
      @extend %gray-border;
      padding: 0.25rem;
      resize: none;
      flex-grow: 1;
      font-size: 0.9rem;
    }

    &__prerequisite-input {
      flex-grow: 1;
      margin-right: 0.25rem;
    }
    &__offered-input {
      flex-grow: 1;
      margin-left: 0.25rem;
    }

    &__add-button {
      height: 2rem;
      @extend %base-button-style;
    }
  }
}

[data-reach-combobox-popover] {
  z-index: 9999;
}

[data-reach-combobox-list] {
  [data-suggested-value],
  [data-user-value] {
    font-family: sans-serif;
    font-weight: normal;
    font-size: 0.8rem;
  }
}

.AboutDialog {
  width: #{'min(22.5rem, 100% - 1rem)'};

  h2 {
    margin-bottom: 0.5rem;
  }

  &__github-link {
    display: inline-flex;
    align-items: center;

    img {
      height: 2rem;
      width: 2rem;
      margin-right: 0.5rem;
    }
  }

  // &__contact-form {
  //   display: flex;
  //   flex-direction: column;
  // }

  // input {
  //   height: 1.5rem;
  //   padding: 0.75rem 0.25rem;
  //   margin-bottom: 0.5rem;
  // }
  // textarea {
  //   margin-bottom: 0.75rem;
  //   resize: vertical;
  //   padding: 0.25rem;
  //   max-height: 40rem;
  //   font-family: inherit;
  // }

  // input,
  // textarea {
  //   @extend %gray-border;
  // }

  // button[type=submit] {
  //   @extend %base-button-style;
  //   width: 100%;
  //   height: 2rem;
  //   margin: 0;
  // }
}
