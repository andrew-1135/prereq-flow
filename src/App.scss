@use "utils" as *;

.App {
  flex-grow: 1;
  position: relative;
  overflow: hidden;
}

.Legend {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;

  display: flex;

  @include lightgray-border;
  border-bottom: none;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  padding: 0.25rem;
  background: rgba(white, 0.95);

  div {
    display: flex;
    margin: 0.25rem;
    border: 3px solid;
    border-radius: 5px;
    padding: 0.25rem;

    line-height: 1rem;
    white-space: nowrap;

  }

  @each $status, $color in $flow-colors {
    .#{$status} {
      border-color: $color;
    }
  }
}

.Controls {
  &__open-btn,
  &__close-btn {
    position: absolute;
    bottom: 0.5rem;
    right: 0.5rem;
    z-index: 10;

    height: 2rem;
    width: 2rem;

    @include base-button-style;
    font-size: 1rem;
    font-weight: bold;

    background-color: rgb(240, 240, 240);
    display: flex;
    justify-content: center;
    align-items: center;

    img {
      height: 75%;
      width: 75%;
    }
    &:hover img {
      filter: invert(100%);
    }
  }

  &__content {
    position: absolute;
    bottom: 0;
    right: 0;
    max-width: 20rem;
    z-index: 11;

    @include lightgray-border;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: none;
    border-bottom: none;
    padding-top: 1rem;
    padding-bottom: 1rem;
    padding-left: 2rem;
    padding-right: 3rem;
    background-color: white;
    font-size: 0.9rem;

    li {
      list-style-type: square;
      margin: 0.25rem 0;
    }

    @media (prefers-reduced-motion: no-preference) {
      transition: transform 150ms ease-out;
    }

    &--closed {
      transform: translateX(100%);
    }

    kbd {
      background-color: #eee;
      border-radius: 3px;
      border: 1px solid #b4b4b4;
      color: #333;
      display: inline-block;
      font-size: .85em;
      font-weight: 700;
      line-height: 0.85;
      padding: 2px 4px;
      white-space: nowrap;
      font-family: consolas;
    }
  }
}


/* %%%%%%%%%% */
/* REACT FLOW */
/* %%%%%%%%%% */

// Originals
// $autumn-pink: rgb(255, 204, 204);
// $winter-blue: rgb(153, 204, 255);
// $spring-green: rgb(204, 255, 204);
// $summer-yellow: rgb(252, 249, 144);

$autumn-pink: hsl(0, 100%, 85%); // -5% lightness
$winter-blue: hsl(210, 100%, 80%); // No change
$spring-green: hsl(120, 100%, 85%); // -5% lightness
$summer-yellow: hsl(58, 95%, 75%); // -3% lightness

.tippy-box {
  background: rgba(#333, 0.96);

  p {
    margin: 0.5rem 0;
  }
  mark {
    color: #333;
    background: rgba(white, 0.96);
    padding: 0 0.1rem;
  }

  .offered-autumn,
  .offered-winter,
  .offered-spring,
  .offered-summer {
    color: black;
    padding: 0 0.1rem;
  }
  .offered-autumn {
    background: $autumn-pink;
  }
  .offered-winter {
    background: $winter-blue;
  }
  .offered-spring {
    background: $spring-green;
  }
  .offered-summer {
    background: $summer-yellow;
  }
}

.react-flow__node.selected  {
  .CourseNode,
  .OrNode,
  .AndNode {
    @each $status, $color in $flow-colors {

    &.#{$status} {
        color: white;
        background-color: $color;
      }
    }
  }
}

.CourseNode {
  min-width: 150px;
}

.CourseNode,
.OrNode,
.AndNode {
  border-width: 3px;
  border-style: solid;
  border-radius: 10px;
  padding: 10px;

  text-transform: uppercase;
  font-family: sans-serif;
  font-size: 1.1rem;
  font-weight: bold;
  text-align: center;

  @each $status, $color in $flow-colors {
    &.#{$status} {
      border-color: $color;
      background-color: hsl(hue($color), saturation($color), 95%);

      &.connected {
        background-color: hsl(hue($color), saturation($color), 80%);
      }

      &:hover {
        color: white;
        background-color: $color;
      }
    }
  }

  .react-flow__handle {
    width: 0.65rem;
    height: 0.65rem;
  }
}

.react-flow__edge {
  &-path {
    stroke-width: 3px;
  }
  &-text {
    font-family: sans-serif;
    fill: white;
    font-size: 0.8rem;
  }
  &-textbg {
    fill: black;
  }

  @each $status, $color in $flow-colors {
    &.#{$status} {
      .react-flow__edge-path {
        stroke: $color;
      }
      &:hover,
      &.selected,
      &.animated {
        .react-flow__edge-textbg {
          fill: $color;
        }
      }
    }
  }

  &.animated,
  &.selected,
  &:hover {
    .react-flow__edge-path {
      stroke-width: 6px;
    }
  }
}

.react-flow__controls {
  &-button {
    cursor: auto;
  }
}


/* %%%%%%% */
/* DIALOGS */
/* %%%%%%% */
:root {
  --reach-dialog: 1;
  // Exclude base dialog styles
}

[data-reach-dialog-overlay] {
  position: fixed;
  top: 0;
  height: 100%;
  width: 100%;
  z-index: 15;

  display: flex;
  align-items: center;
  justify-content: center;

  @media (prefers-reduced-motion: no-preference) {
    transition: opacity 100ms;
  }
  background: rgba(black, 0.5);
}

[data-reach-dialog-content] {
  position: relative;
  max-height: calc(100% - 1rem);

  margin: 0.5rem;
  @include lightgray-border;
  padding: 1rem;
  background: white;
}

.tippy-box--error {
  background: darkred;
}

// Used in AddCourseDialog
// Appears in top-level portal outside of dialog
[data-reach-combobox-popover] {
  z-index: 9999;
}

[data-reach-combobox-list] {
  li,
  [data-suggested-value],
  [data-user-value] {
    font-family: sans-serif;
    font-weight: normal;
    font-size: 0.8rem;
  }
}
